#define IR_SENSOR_RIGHT 11
#define IR_SENSOR_LEFT 12
#define MOTOR_SPEED 180
int enableRightMotor1 = 6;
int rightMotorPin1_1 = 7;
int rightMotorPin2_1 = 8;
int enableRightMotor2 = 3;
int rightMotorPin1_2 = 4;
int rightMotorPin2_2 = 5;
int enableLeftMotor1 = 5;
int leftMotorPin1_1 = 9;
int leftMotorPin2_1 = 10;
int enableLeftMotor2 = 2;
int leftMotorPin1_2 = A0;
int leftMotorPin2_2 = A1;
void setup()
{
    TCCR0B = TCCR0B & B11111000 | B00000010;
  
  pinMode(enableRightMotor1, OUTPUT);
  pinMode(rightMotorPin1_1, OUTPUT);
  pinMode(rightMotorPin2_1, OUTPUT);

  pinMode(enableRightMotor2, OUTPUT);
  pinMode(rightMotorPin1_2, OUTPUT);
  pinMode(rightMotorPin2_2, OUTPUT);

  pinMode(enableLeftMotor1, OUTPUT);
  pinMode(leftMotorPin1_1, OUTPUT);
  pinMode(leftMotorPin2_1, OUTPUT);

  pinMode(enableLeftMotor2, OUTPUT);
  pinMode(leftMotorPin2_2, OUTPUT);    
  pinMode(leftMotorPin1_2, OUTPUT);   

  pinMode(IR_SENSOR_RIGHT, INPUT);
  pinMode(IR_SENSOR_LEFT, INPUT);
  rotateMotor(0, 0, 0, 0);   
}

void loop()
{
  int rightIRSensorValue = digitalRead(IR_SENSOR_RIGHT);
  int leftIRSensorValue = digitalRead(IR_SENSOR_LEFT);

  if (rightIRSensorValue == LOW && leftIRSensorValue == LOW)
  {
    rotateMotor(MOTOR_SPEED, MOTOR_SPEED, MOTOR_SPEED, MOTOR_SPEED);
  }
  else if (rightIRSensorValue == HIGH && leftIRSensorValue == LOW)
  {
    rotateMotor(-MOTOR_SPEED, MOTOR_SPEED, -MOTOR_SPEED, MOTOR_SPEED);
  }
  else if (rightIRSensorValue == LOW && leftIRSensorValue == HIGH)
  {
    rotateMotor(MOTOR_SPEED, -MOTOR_SPEED, MOTOR_SPEED, -MOTOR_SPEED);
  }
  else
  {
    rotateMotor(0, 0, 0, 0);
  }
}

void rotateMotor(int rightMotorSpeed1, int leftMotorSpeed1, int rightMotorSpeed2, int leftMotorSpeed2)
{
  
  if (rightMotorSpeed1 < 0)
  {
    digitalWrite(rightMotorPin1_1, LOW);
    digitalWrite(rightMotorPin2_1, HIGH);    
  }
  else if (rightMotorSpeed1 > 0)
  {
    digitalWrite(rightMotorPin1_1, HIGH);
    digitalWrite(rightMotorPin2_1, LOW);      
  }
  else
  {
    digitalWrite(rightMotorPin1_1, LOW);
    digitalWrite(rightMotorPin2_1, LOW);      
  }

  if (leftMotorSpeed1 < 0)
  {
    digitalWrite(leftMotorPin1_1, LOW);
    digitalWrite(leftMotorPin2_1, HIGH);    
  }
  else if (leftMotorSpeed1 > 0)
  {
    digitalWrite(leftMotorPin1_1, HIGH);
    digitalWrite(leftMotorPin2_1, LOW);      
  }
  else 
  {
    digitalWrite(leftMotorPin1_1, LOW);
    digitalWrite(leftMotorPin2_1, LOW);      
  }

  if (rightMotorSpeed2 < 0)
  {
    digitalWrite(rightMotorPin1_2, LOW);
    digitalWrite(rightMotorPin2_2, HIGH);    
  }
  else if (rightMotorSpeed2 > 0)
  {
    digitalWrite(rightMotorPin1_2, HIGH);
    digitalWrite(rightMotorPin2_2, LOW);      
  }
  else
  {
    digitalWrite(rightMotorPin1_2, LOW);
    digitalWrite(rightMotorPin2_2, LOW);      
  }

  
  if (leftMotorSpeed2 < 0)
  {
    digitalWrite(leftMotorPin1_2, LOW);
    digitalWrite(leftMotorPin2_2, HIGH);    
  }
  else if (leftMotorSpeed2 > 0)
  {
    digitalWrite(leftMotorPin1_2, HIGH);
    digitalWrite(leftMotorPin2_2, LOW);      
  }
  else 
  {
    digitalWrite(leftMotorPin1_2, LOW);
    digitalWrite(leftMotorPin2_2, LOW);      
  }

  analogWrite(enableRightMotor1, abs(rightMotorSpeed1));
  analogWrite(enableLeftMotor1, abs(leftMotorSpeed1));
  analogWrite(enableRightMotor2, abs(rightMotorSpeed2));
  analogWrite(enableLeftMotor2, abs(leftMotorSpeed2));
}
