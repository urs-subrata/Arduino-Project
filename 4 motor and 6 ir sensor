#define LENB 11
#define LMN3 12
#define LMN4 13
#define RENA 10
#define RMN1 9
#define RMN2 8

#define IRNUM 6  //define number of ir sensor

// Define the analog pins to which IR sensors are connected
int IRPins[IRNUM] = {2, 3, 4, 5, 6, 7};
#define speed 60

void setup() {
  // Initialize motor control pins as outputs
  pinMode(LENB, OUTPUT);
  pinMode(LMN3, OUTPUT);
  pinMode(LMN4, OUTPUT);
  pinMode(RENA, OUTPUT);
  pinMode(RMN1, OUTPUT);
  pinMode(RMN2, OUTPUT);
  // Initialize ir sensor pins as inputs
  for (int i = 0; i < IRNUM; i++) {
    pinMode(IRPins[i], INPUT);
  }
}

void loop() {
  int left = 0;
  int right = 0;
  // Read digital values from each IR sensor
  for (int i = 0; i < (IRNUM / 2); i++) {
    left += digitalRead(IRPins[i]); // Read digital value
  }
  for (int i = IRNUM / 2; i < IRNUM; i++) {
    right += digitalRead(IRPins[i]); // Read digital value
  }
  if (left == 3) { // When left three sensors are active, stop left motor
    digitalWrite(LMN3, LOW);
    digitalWrite(LMN4, LOW);
  } else {
    // Control left motor based on sensor readings
    int error = left - right;
    int kc = 0.04; // Adjusted value for proportional control
    int p = error * kc;
    int lspeed = speed - p;
    if (lspeed >= 0) { // left motor forward
      digitalWrite(LMN3, HIGH);
      digitalWrite(LMN4, LOW);
      analogWrite(LENB, lspeed);
    } else { // left motor backward
      digitalWrite(LMN3, LOW);
      digitalWrite(LMN4, HIGH);
      analogWrite(LENB, -lspeed);
    }
  }

  if (right == 3) { // When right three sensors are active, stop right motor
    digitalWrite(RMN1, LOW);
    digitalWrite(RMN2, LOW);
  } else {
    // Control right motor based on sensor readings
    int error = right - left;
    int kc = 0.04; // Adjusted value for proportional control
    int p = error * kc;
    int rspeed = speed - p;
    if (rspeed >= 0) { // right motor forward
      digitalWrite(RMN1, HIGH);
      digitalWrite(RMN2, LOW);
      analogWrite(RENA, rspeed);
    } else { // right motor backward
      digitalWrite(RMN1, LOW);
      digitalWrite(RMN2, HIGH);
      analogWrite(RENA, -rspeed);
    }
  }
}
